name: Build and Release

on:
  push:
    branches:
      - "master"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm i -g semantic-release @semantic-release/changelog @semantic-release/git
          semantic-release

  publish-amd64:
    name: Build and Publish AMD64 Docker Image
    needs: release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push AMD64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ghcr.io/obviyus/hamverbot:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish-arm64:
    name: Build and Publish ARM64 Docker Image
    needs: release
    runs-on: ubuntu-latest-arm64
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push ARM64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: ghcr.io/obviyus/hamverbot:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-manifest:
    name: Create and Push Multi-Arch Manifest
    needs: [publish-amd64, publish-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create and push manifest
        run: |
          docker manifest create ghcr.io/obviyus/hamverbot:latest \
            ghcr.io/obviyus/hamverbot:${{ github.sha }}
          docker manifest annotate ghcr.io/obviyus/hamverbot:latest \
            ghcr.io/obviyus/hamverbot:${{ github.sha }} --arch amd64 --os linux
          docker manifest annotate ghcr.io/obviyus/hamverbot:latest \
            ghcr.io/obviyus/hamverbot:${{ github.sha }} --arch arm64 --os linux
          docker manifest push ghcr.io/obviyus/hamverbot:latest